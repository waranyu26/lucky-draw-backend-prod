{"version":3,"sources":["../../src/routes/auth.route.ts"],"sourcesContent":["import { Router } from 'express';\nimport AuthController from '@controllers/auth.controller';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { Routes } from '@interfaces/routes.interface';\nimport authMiddleware from '@middlewares/auth.middleware';\nimport validationMiddleware from '@middlewares/validation.middleware';\nimport * as authenCheck from '@/middlewares/auth.check.authenticate.middleware';\nimport initializePassport from '@/passport/passport-config';\nimport passport from 'passport';\nimport flash from 'express-flash';\nimport session from 'express-session';\n\nclass AuthRoute implements Routes {\n  public path = '/auth';\n  public router = Router();\n  public authController = new AuthController();\n\n  constructor() {\n    this.initializeRoutes();\n  }\n\n  private initializeRoutes() {\n    this.router.get(`${this.path}`, this.authController.test);\n    \n    this.router.get(`${this.path}/success`, authenCheck.requireAuthentication, this.authController.logInSuccess);\n    this.router.get(`${this.path}/fail`, this.authController.logInFailed);\n    this.router.post(`${this.path}/signup`, [authenCheck.requireAuthentication, authenCheck.requireSuperAdmin], this.authController.signUp);\n    this.router.post(`${this.path}/login`, authenCheck.requireNotAuthentication, this.authController.logIn);\n    this.router.post(`${this.path}/logout`, authenCheck.requireAuthentication, this.authController.logOut);\n    \n    this.router.get(`${this.path}/validate/fail/:failID`, this.authController.validationFailed)\n    this.router.get(`${this.path}/badreq`, this.authController.badRequest)\n\n    // Test api\n    this.router.get(`${this.path}/cashier`, \n    [authenCheck.requireAuthentication, authenCheck.requireCashier], \n      (req, res) => {\n        res.setHeader('Content-Type', 'application/json');\n        return res.send(JSON.stringify({\n          status: 200,\n          message: 'Im cash cheer',\n        }));\n    });\n    this.router.get(`${this.path}/admin`, \n    [authenCheck.requireAuthentication, authenCheck.requireAdmin],  \n    (req, res) => {\n      res.setHeader('Content-Type', 'application/json');\n      return res.send(JSON.stringify({\n        status: 200,\n        message: 'Im batman',\n      }));\n  });\n\n  }\n}\n\nexport default AuthRoute;"],"names":["AuthRoute","initializeRoutes","router","get","path","authController","test","authenCheck","requireAuthentication","logInSuccess","logInFailed","post","requireSuperAdmin","signUp","requireNotAuthentication","logIn","logOut","validationFailed","badRequest","requireCashier","req","res","setHeader","send","JSON","stringify","status","message","requireAdmin","constructor","Router","AuthController"],"mappings":"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"}