{"version":3,"sources":["../../src/services/slip.service.ts"],"sourcesContent":["import { message } from '@/constants/messages';\nimport PGPool from '@/db_pool/pg_pool';\n\nclass SlipService {\n  public async createSlip(values: string, columns: string) {\n    try {\n      const pool = new PGPool();\n      const insert = await pool.aquery(\n        `INSERT INTO tbl_slip (${columns})\n        VALUES ${values}\n        RETURNING id\n        `,\n      );\n      const data = insert.rows;\n      return { statusCode: 201, message: message.success.created, data };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async updateSlip(update: string, conditions: string) {\n    try {\n      return { statusCode: 204, message: message.success.updated };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async readSlip(columns: string, conditions?: string) {\n    try {\n      const pool = new PGPool();\n      columns = columns ? columns : '*';\n      const SQL = conditions ? `SELECT ${columns} FROM tbl_slip WHERE ${conditions}` : `SELECT ${columns} FROM tbl_slip`;\n      const data = await pool.aquery(SQL);\n      return { statusCode: 200, message: message.success.ok, data: data.rows };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async createSlipDetail(values: string, columns: string) {\n    try {\n      const pool = new PGPool();\n      const insert = await pool.aquery(\n        `INSERT INTO tbl_slip_detail (${columns})\n        VALUES ${values}\n        RETURNING id`,\n      );\n      const id = insert.rows[0].id;\n      return { statusCode: 201, message: message.success.created, data: { id } };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n}\n\nexport default SlipService;\n"],"names":["SlipService","createSlip","values","columns","pool","PGPool","insert","aquery","data","rows","statusCode","message","success","created","e","console","log","errors","internal","updateSlip","update","conditions","updated","readSlip","SQL","ok","createSlipDetail","id"],"mappings":"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"}