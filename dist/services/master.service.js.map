{"version":3,"sources":["../../src/services/master.service.ts"],"sourcesContent":["import {\n  MasterCondtions,\n  MasterData,\n  MasterProducts,\n  MasterPromotions,\n  MasterStation,\n  MasterTemplates,\n  MasterTemplatesWithId,\n  MasterUsers,\n  MasterConditionsWithId,\n  MasterTemplateDetailsWithId,\n  MasterTemplateDetails,\n} from '@/interfaces/master.interface';\nimport PGPool from '@/db_pool/pg_pool';\n\nclass MasterService {\n  public async getConditionsData(\n    idxCondition: number,\n    conditions: Array<MasterConditionsWithId>,\n    promotion: MasterPromotions,\n  ): Promise<[number, Array<MasterCondtions>]> {\n    // match between promotion and conditions\n    const result: Array<MasterCondtions> = [];\n    while (idxCondition < conditions.length) {\n      if (conditions[idxCondition].id == promotion.id) {\n        const condition: MasterCondtions = {\n          product_id: conditions[idxCondition].product_id,\n          special_type: conditions[idxCondition].special_type,\n          special_num: conditions[idxCondition].special_num,\n        };\n        result.push(condition);\n        idxCondition++;\n      } else {\n        break;\n      }\n    }\n    return [idxCondition, result];\n  }\n\n  public async getTemplatesData(\n    idxTemplate: number,\n    idxTemplateDetail: number,\n    templates: Array<MasterTemplatesWithId>,\n    templatesDetail: Array<MasterTemplateDetailsWithId>,\n    promotion: MasterPromotions,\n  ): Promise<[number, number, Array<MasterTemplates>]> {\n    // match between promotion and templates\n    const result: Array<MasterTemplates> = [];\n\n    while (idxTemplate < templates.length) {\n      const details: Array<MasterTemplateDetails> = [];\n      while (idxTemplateDetail < templatesDetail.length) {\n        if (templatesDetail[idxTemplateDetail].promotion_template_id == templates[idxTemplate].promotion_template_id) {\n          const detail: MasterTemplateDetails = {\n            type: templatesDetail[idxTemplateDetail].type,\n            text_detail: templatesDetail[idxTemplateDetail].text_detail,\n            text_font: templatesDetail[idxTemplateDetail].text_font,\n          };\n          details.push(detail);\n          idxTemplateDetail++;\n        } else {\n          break;\n        }\n      }\n      if (templates[idxTemplate].id == promotion.id) {\n        const template: MasterTemplates = {\n          type: templates[idxTemplate].type,\n          type_detail: templates[idxTemplate].type_detail,\n          line_type: templates[idxTemplate].line_type,\n          detail: details,\n        };\n        result.push(template);\n        idxTemplate++;\n      } else {\n        break;\n      }\n    }\n\n    return [idxTemplate, idxTemplateDetail, result];\n  }\n\n  public async syncMasterData(station_id: BigInt): Promise<[number, Object, string]> {\n    try {\n      const pool = new PGPool();\n      const stationSQL = await pool.aquery(\n        `SELECT id,code,name_th,name_en\n        FROM tbl_station WHERE id = '${station_id}'`,\n      );\n\n      if (!stationSQL.rows.length) {\n        return [404, [], 'stationID not found'];\n      }\n\n      const usersSQL = await pool.aquery(\n        `SELECT U.username,U.password,U.password_mobile_pos,U.name,U.phone_number,R.name AS role_name\n        FROM tbl_users AS U\n        INNER JOIN tbl_roles AS R ON R.id = U.role_id\n        WHERE U.station_id = '${station_id}' ORDER BY U.id ASC`,\n      );\n      const productsSQL = await pool.aquery(\n        `SELECT P.code,P.name\n        FROM tbl_products AS P\n        INNER JOIN tbl_station_has_product AS SHP ON SHP.product_id = P.id\n        WHERE SHP.station_id = '${station_id}' ORDER BY P.id ASC`,\n      );\n\n      const promotionsSQL = await pool.aquery(\n        `SELECT PRO.id, PRO.code, PRO.name, PRO.start_date, PRO.end_date, PRO.condition_type,\n                PRO.start_price, PRO.end_price, PRO.use_num, PRO.use_max, PRO.priority, PRO.child_id\n        FROM tbl_promotions AS PRO\n        INNER JOIN tbl_sync_promotions_detail AS SPRO ON SPRO.promotion_id = PRO.id\n        WHERE SPRO.station_id = '${station_id}' ORDER BY PRO.id ASC`,\n      );\n\n      const conditionsSQL = await pool.aquery(\n        `SELECT PRO.id, PROC.product_id, PROC.special_type, PROC.special_num\n        FROM tbl_promotions AS PRO\n        INNER JOIN tbl_sync_promotions_detail AS SPRO ON SPRO.promotion_id = PRO.id\n        INNER JOIN tbl_promotions_has_condition AS PROC ON PROC.promotion_id = PRO.id\n        WHERE SPRO.station_id = '${station_id}'\n        GROUP BY PRO.id, PROC.product_id, PROC.special_type, PROC.special_num ORDER BY PRO.id ASC`,\n      );\n\n      const templatesSQL = await pool.aquery(\n        `SELECT PRO.id, PROT.id as promotion_template_id, PROT.type, PROT.type_detail, PROT.line_type\n        FROM tbl_promotions AS PRO\n        INNER JOIN tbl_sync_promotions_detail AS SPRO ON SPRO.promotion_id = PRO.id\n        INNER JOIN tbl_promotions_template AS PROT ON PROT.promotion_id = PRO.id\n        WHERE SPRO.station_id = '${station_id}'\n        GROUP BY PRO.id, PROT.id, PROT.type, PROT.type_detail, PROT.line_type\n        ORDER BY PRO.id, PROT.id ASC`,\n      );\n\n      const templatesDetailSQL = await pool.aquery(\n        `SELECT PRO.id, PROT.id as promotion_template_id, TD.type, TD.text_detail, TD.text_font\n        FROM tbl_promotions_template AS PROT\n        INNER JOIN tbl_promotions AS PRO\n        ON PROT.promotion_id = PRO.id\n        INNER JOIN tbl_sync_promotions_detail AS SPRO\n        ON SPRO.promotion_id = PRO.id\n        LEFT JOIN tbl_template_detail AS TD\n        ON TD.promotion_template_id = PROT.id\n        WHERE SPRO.station_id = 1\n        GROUP BY PRO.id, PROT.id, PROT.type, PROT.type_detail, PROT.line_type, TD.type, TD.text_detail, TD.text_font\n        ORDER BY PRO.id, promotion_template_id ASC`,\n      );\n\n      const station: MasterStation = stationSQL.rows[0];\n      const users: Array<MasterUsers> = usersSQL.rows;\n      const products: Array<MasterProducts> = productsSQL.rows;\n      const promotions: Array<MasterPromotions> = promotionsSQL.rows;\n      const conditions: Array<MasterConditionsWithId> = conditionsSQL.rows;\n      const templates: Array<MasterTemplatesWithId> = templatesSQL.rows;\n      const templatesDetail: Array<MasterTemplateDetailsWithId> = templatesDetailSQL.rows;\n\n      let idxCondition = 0;\n      for (let i = 0; i < promotions.length; i++) {\n        [idxCondition, promotions[i].conditions] = await this.getConditionsData(idxCondition, conditions, promotions[i]);\n      }\n\n      let idxTemplate = 0;\n      let idxTemplateDetail = 0;\n      for (let i = 0; i < promotions.length; i++) {\n        [idxTemplate, idxTemplateDetail, promotions[i].templates] = await this.getTemplatesData(\n          idxTemplate,\n          idxTemplateDetail,\n          templates,\n          templatesDetail,\n          promotions[i],\n        );\n      }\n\n      const data: MasterData = {\n        station,\n        users,\n        products,\n        promotions,\n      };\n\n      return [200, data, 'syncMasterData'];\n    } catch (e) {\n      console.log(e);\n      return [500, [], 'Internal Server Error'];\n    }\n  }\n}\n\nexport default MasterService;\n"],"names":["MasterService","getConditionsData","idxCondition","conditions","promotion","result","length","id","condition","product_id","special_type","special_num","push","getTemplatesData","idxTemplate","idxTemplateDetail","templates","templatesDetail","details","promotion_template_id","detail","type","text_detail","text_font","template","type_detail","line_type","syncMasterData","station_id","pool","PGPool","stationSQL","aquery","rows","usersSQL","productsSQL","promotionsSQL","conditionsSQL","templatesSQL","templatesDetailSQL","station","users","products","promotions","i","data","e","console","log"],"mappings":"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"}