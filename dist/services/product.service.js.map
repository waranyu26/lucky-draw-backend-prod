{"version":3,"sources":["../../src/services/product.service.ts"],"sourcesContent":["import { message } from '@/constants/messages';\nimport PGPool from '@/db_pool/pg_pool';\nimport { ProductOnStation } from '@/interfaces/product.interface';\nimport { ResponsePattern } from '@/interfaces/response.interface';\n\nclass ProductService {\n  public async createProduct(): Promise<void> {\n    const pool = new PGPool();\n  }\n\n  public async readProduct(productId: BigInt, column?: string): Promise<ResponsePattern> {\n    try {\n      const pool = new PGPool();\n      if (!column) column = '*';\n      const station = await pool.aquery(`SELECT ${column} FROM tbl_products WHERE id = '${productId}'`);\n      console.log(station);\n      if (station.rowCount === 0) return { statusCode: 400, message: message.errors.notFound };\n      return { statusCode: 200, message: message.success.ok, data: station.rows[0] };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async listProductByStation(stationId: BigInt, column?: string): Promise<ResponsePattern> {\n    try {\n      const pool = new PGPool();\n      if (!column) column = '*';\n      const products = await pool.aquery(\n        `SELECT ${column} FROM tbl_products AS P\n        INNER JOIN tbl_station_has_product AS SHP ON SHP.product_id = P.id\n        WHERE SHP.station_id = '${stationId}'\n        GROUP BY P.id\n        ORDER BY P.id ASC`,\n      );\n\n      return { statusCode: 200, message: message.success.ok, data: products.rows };\n    } catch (e) {\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async listProduct(column?: string) {\n    const pool = new PGPool();\n    if (!column) column = '*';\n    const station = await pool.aquery(`SELECT * FROM tbl_stations ORDER BY id`);\n    return station.rows;\n  }\n\n  public async updateProduct() {\n    const pool = new PGPool();\n  }\n\n  public async deleteProduct() {\n    const pool = new PGPool();\n  }\n\n  public groupProduct(productGroup: Array<ProductOnStation>) {\n    const result: Object = {};\n    const productGroupLength = productGroup.length;\n    for (let i = 0; i < productGroupLength; i++) {\n      const stationId = productGroup[i].station_id.toString();\n      if (!result[stationId]) {\n        result[stationId] = {};\n        result[stationId]['products'] = [];\n      }\n\n      const productData = {\n        id: productGroup[i].id,\n        code: productGroup[i].code,\n        name: productGroup[i].name,\n        image: productGroup[i].image,\n      };\n      result[stationId]['products'].push(productData);\n    }\n    return result;\n  }\n}\n\nexport default ProductService;\n"],"names":["ProductService","createProduct","pool","PGPool","readProduct","productId","column","station","aquery","console","log","rowCount","statusCode","message","errors","notFound","success","ok","data","rows","e","internal","listProductByStation","stationId","products","listProduct","updateProduct","deleteProduct","groupProduct","productGroup","result","productGroupLength","length","i","station_id","toString","productData","id","code","name","image","push"],"mappings":"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"}