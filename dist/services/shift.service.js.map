{"version":3,"sources":["../../src/services/shift.service.ts"],"sourcesContent":["import { message } from '@/constants/messages';\nimport PGPool from '@/db_pool/pg_pool';\nimport { ResponsePattern } from '@/interfaces/response.interface';\nimport SlipService from './slip.service';\n\nclass ShiftService {\n  public slipService = new SlipService();\n\n  public async createShift(values: string, columns: string) {\n    try {\n      const pool = new PGPool();\n      const insert = await pool.aquery(\n        `INSERT INTO tbl_report_shift (${columns})\n        VALUES ${values}\n        RETURNING id`,\n      );\n\n      const id = insert.rows[0].id;\n      return { statusCode: 201, message: message.success.created, data: { id } };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async updateShift(update: string, conditions: string) {\n    try {\n      const pool = new PGPool();\n      await pool.aquery(\n        `UPDATE tbl_report_shift\n        SET ${update} WHERE ${conditions}`,\n      );\n      return { statusCode: 204, message: message.success.updated };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async readShift(columns: string, conditions?: string) {\n    try {\n      const pool = new PGPool();\n      columns = columns ? columns : '*';\n      const SQL = conditions ? `SELECT ${columns} FROM tbl_report_shift WHERE ${conditions}` : `SELECT ${columns} FROM tbl_report_shift`;\n      const data = await pool.aquery(SQL);\n      return { statusCode: 200, message: message.success.ok, data: data.rows };\n    } catch (e) {\n      console.log(e);\n      return { statusCode: 500, message: message.errors.internal };\n    }\n  }\n\n  public async closeShiftOrDate(data: any, shiftOrDate: string): Promise<ResponsePattern> {\n    let nextShift, nextDate;\n    for (let i = 0; i < data.length; i++) {\n      const { station_id, user_id, mobile_pos_id, business_date, slip, shift } = data[i];\n      nextShift = shift + 1;\n      nextDate = business_date;\n\n      if (shiftOrDate == 'date') {\n        // create Shift + 1\n        nextShift = 1;\n        const today = new Date();\n      } else if (shiftOrDate == 'date') {}\n      const createShift: ResponsePattern = await this.createShift(\n        `(${station_id.toString()}, ${user_id.toString()}, ${mobile_pos_id.toString()}, '${business_date}', ${nextShift.toString()}, 0, 0,\n        CURRENT_TIMESTAMP(6), CURRENT_TIMESTAMP(6), CURRENT_TIMESTAMP(6))`,\n        'station_id, user_id, mobile_pos_id, date, shift, type, status, date_receive, created_at, updated_at',\n      );\n      const report_shift_id = createShift.data.id;\n      if (createShift.statusCode === 500) return { statusCode: 500, message: message.errors.internal };\n\n      // update Shift (status = 1)\n      const updateShift: ResponsePattern = await this.updateShift(\n        `status = 1, updated_at = CURRENT_TIMESTAMP(6)`,\n        `station_id = ${station_id.toString()} AND user_id = ${user_id.toString()} AND\n        mobile_pos_id = ${mobile_pos_id.toString()} AND date = '${business_date}' AND shift = ${shift.toString()}`,\n      );\n      if (updateShift.statusCode === 500) return { statusCode: 500, message: message.errors.internal };\n\n      if (slip) {\n        const slipLength = slip.length;\n        for (let j = 0; j < slipLength; j++) {\n          const { promotion_id, product_id, price, number, detail } = slip[j];\n          const createSlip = await this.slipService.createSlip(\n            `(${station_id}, ${promotion_id}, ${product_id}, ${user_id}, ${report_shift_id},\n              '${business_date}', ${shift}, ${number}, ${price}, CURRENT_TIMESTAMP(6), CURRENT_TIMESTAMP(6))`,\n            'station_id, promotion_id, product_id, user_id, report_shift_id, date, shift, number, price, created_at, updated_at',\n          );\n\n          const slip_id = createSlip.data[0].id;\n          if (detail) {\n            let values = '';\n            for (let k = 0; k < detail.length; k++) {\n              const { promotion_id, template_id, number } = detail[k];\n              values += `(${slip_id}, ${promotion_id}, ${template_id}, ${number}, CURRENT_TIMESTAMP(6), CURRENT_TIMESTAMP(6))`;\n              values = k < detail.length - 1 ? values + ',' : values;\n            }\n            const createSlipDetail = await this.slipService.createSlipDetail(\n              values,\n              'slip_id, promotion_id, template_id, number, created_at, updated_at',\n            );\n            if (createSlipDetail.statusCode === 500) return { statusCode: 500, message: message.errors.internal };\n          }\n        }\n      }\n    }\n    return { statusCode: 200, message: message.success.ok, data: { shift: nextShift, business_date: nextDate } };\n  }\n}\n\nexport default ShiftService;\n"],"names":["ShiftService","createShift","values","columns","pool","PGPool","insert","aquery","id","rows","statusCode","message","success","created","data","e","console","log","errors","internal","updateShift","update","conditions","updated","readShift","SQL","ok","closeShiftOrDate","shiftOrDate","nextShift","nextDate","i","length","station_id","user_id","mobile_pos_id","business_date","slip","shift","today","Date","toString","report_shift_id","slipLength","j","promotion_id","product_id","price","number","detail","createSlip","slipService","slip_id","k","template_id","createSlipDetail","SlipService"],"mappings":"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"}