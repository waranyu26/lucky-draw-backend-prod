{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { RequestWithUser } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\nimport AuthService from '@services/auth.service';\n// import { pool } from '../database';\nimport PGPool from '@/db_pool/pg_pool';\n\nimport passport from 'passport';\nimport initializePassport from '@/passport/passport-config';\nimport flash from 'express-flash';\nimport session from 'express-session';\nimport bcrypt from 'bcrypt';\n\nclass AuthController {\n  public authService = new AuthService();\n  private pool = new PGPool();\n  // public passport = require('passport-local')\n\n  // public signUp = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    public signUp = async (req, res: Response) => {\n\n    if (this.passRegisterRequirement()) {\n      let salt = await bcrypt.genSalt(10)\n      let hashed = await bcrypt.hash(req.body.password, salt);\n      \n      let userProfile = {\n        id: req.body.id,\n        username: req.body.username,\n        password: hashed,\n        name: req.body.name,\n        phone_number: req.body.phone_number,\n        role_id: req.body.role_id,\n        station_id: req.body.station_id,\n        created_at: `CURRENT_TIMESTAMP(6)`,\n        updated_at: null,\n        password_mobile_pos: req.body.password_mobile_pos\n      }\n\n      // ${userProfile.id},\n      let querySQL = `\n        INSERT INTO tbl_users (\n          username,\n          password,\n          name,\n          phone_number,\n          role_id,\n          station_id,\n          created_at,\n          updated_at,\n          password_mobile_pos\n        )\n        VALUES (\n          '${userProfile.username}',\n          '${userProfile.password}',\n          '${userProfile.name}',\n          '${userProfile.phone_number}',\n          ${userProfile.role_id},\n          ${userProfile.station_id},\n          ${userProfile.created_at},\n          ${userProfile.updated_at},\n          '${userProfile.password_mobile_pos}'\n      )`\n\n      // console.log(querySQL)\n\n      try {\n        await this.pool.aquery(querySQL);\n        return res.end(JSON.stringify(\n          {\n            status: 200,\n            XID: req.user,\n            message: 'successfully add new user :)'\n          }\n        ));\n\n      } catch (error) {\n        console.log(error)\n        return res.end(JSON.stringify(\n          {\n            status: 500,\n            XID: req.user,\n            message: 'internal server error'\n          }\n        ));\n      }\n    }\n  };\n\n  public logIn = (req, res, next) => {\n    const authFunc = passport.authenticate('local', {\n      successRedirect: `/auth/success`,\n      failureRedirect: `/auth/fail`,\n      failureFlash: true,\n    });\n    authFunc(req, res, next)\n  };\n\n  public logOut = async (req, res, next) => {\n    req.logOut()\n    // res.redirect('/login')\n    res.setHeader('Content-Type', 'application/json');\n    return res.send(JSON.stringify({\n      status: 200,\n      message: 'logout success',\n      // email: req.user.email,\n      // password: req.user.password,\n    }));\n  };\n\n  private passRegisterRequirement() {\n    return 1\n  }\n\n  public logInSuccess (req, res, next) {\n    console.log(req.sessionID)\n    console.log(req.user)\n    console.log(req.session)\n\n    // console.log(req)\n    res.setHeader('Content-Type', 'application/json');\n    return res.send(JSON.stringify({\n      status: 200,\n      sessionID: req.sessionID,\n      userProfile: req.user,     \n      expires: req.session.cookie._expires,\n      message: 'login success',\n      // email: req.user.email,\n      // password: req.user.password,\n    }));\n  }\n\n  public logInFailed(req, res, next) {\n    // console.log(req)\n    res.setHeader('Content-Type', 'application/json');\n    return res.send(JSON.stringify({\n      status: 401,\n      message: 'login failed',\n      // email: req.user.email,\n      // password: req.user.password,\n    }));\n  }\n\n  public validationFailed(req, res, next) {\n    const errorcode = [\n      `Unauthorized access`,\n      `Not a cashier`,\n      `Not an admin`,\n      `Not a super admin`,\n    ]\n\n    res.setHeader('Content-Type', 'application/json');\n    return res.send(JSON.stringify({\n      status: 401,\n      message: `Your role does not match the requirement ERROR: '${errorcode[Number(req.params.failID)]}'`,\n      // email: req.user.email,\n      // password: req.user.password,\n    }));\n  }\n\n  public badRequest(req, res, next) {\n    res.setHeader('Content-Type', 'application/json');\n    return res.send(JSON.stringify({\n      status: 400,\n      message: `Bad request`,\n      // email: req.user.email,\n      // password: req.user.password,\n    }));\n  }\n\n  public test = async (req: RequestWithUser, res: Response) => {\n    try {\n      const pool = new PGPool();\n      const dataset = await pool.aquery('SELECT * FROM tbl_station WHERE id = 10');\n      \n      console.log(dataset.rows);\n\n      res.setHeader('Content-Type', 'application/json');\n      return res.end(JSON.stringify(dataset.rows));\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport default AuthController;"],"names":["AuthController","passRegisterRequirement","logInSuccess","req","res","next","console","log","sessionID","user","session","setHeader","send","JSON","stringify","status","userProfile","expires","cookie","_expires","message","logInFailed","validationFailed","errorcode","Number","params","failID","badRequest","authService","AuthService","pool","PGPool","signUp","salt","bcrypt","genSalt","hashed","hash","body","password","id","username","name","phone_number","role_id","station_id","created_at","updated_at","password_mobile_pos","querySQL","aquery","end","XID","error","logIn","authFunc","passport","authenticate","successRedirect","failureRedirect","failureFlash","logOut","test","dataset","rows"],"mappings":"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"}