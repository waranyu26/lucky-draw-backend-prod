{"version":3,"sources":["../../src/db_pool/pg_pool.ts"],"sourcesContent":["import { Pool, PoolClient, PoolConfig, QueryResult } from 'pg';\nimport { DB_HOST_NAME, DB_USER_NAME, DB_PASSWORD, DB_PORT, DB_DATABASE, SSL_CA_CERTIFICATES } from '@config';\nimport * as fs from 'fs';\nimport { User } from '@/interfaces/users.interface';\n\nexport default class PGPool {\n  pool: Pool;\n\n  constructor() {\n    this.pool = new Pool({\n      user: DB_USER_NAME || 'postgres',\n      host: DB_HOST_NAME || 'localhost',\n      password: DB_PASSWORD || '',\n      port: parseInt(DB_PORT) || 25060,\n      database: DB_DATABASE || 'postgres',\n      ssl: {\n        rejectUnauthorized: false,\n        ca: SSL_CA_CERTIFICATES || '',\n      },\n    });\n  }\n\n  async aquery(sqlText: string, params: any[] = []): Promise<QueryResult<any>> {\n    const pool = await this.pool.connect();\n\n    try {\n      // await pool.query(`SET SESSION postgres.user = '${cUser}'`, []);\n      const result = await pool.query(sqlText, params);\n\n      return result;\n    } catch (e) {\n      throw e;\n    } finally {\n      pool.release();\n    }\n  }\n\n  async connect(): Promise<PoolClient> {\n    const pool = await this.pool.connect();\n    return pool;\n  }\n}\n"],"names":["PGPool","aquery","sqlText","params","pool","connect","result","query","e","release","constructor","Pool","user","DB_USER_NAME","host","DB_HOST_NAME","password","DB_PASSWORD","port","parseInt","DB_PORT","database","DB_DATABASE","ssl","rejectUnauthorized","ca","SSL_CA_CERTIFICATES"],"mappings":"AAAA;;;;;;aAKqBA,MAAM;;oBAL+B,IAAI;wBACqC,WAAS;AAI7F,IAAA,AAAMA,MAAM,GAAZ,MAAMA,MAAM;UAiBnBC,MAAM,CAACC,OAAe,EAAEC,MAAa,GAAG,EAAE,EAA6B;QAC3E,MAAMC,IAAI,GAAG,MAAM,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE,AAAC;QAEvC,IAAI;YAEF,MAAMC,MAAM,GAAG,MAAMF,IAAI,CAACG,KAAK,CAACL,OAAO,EAAEC,MAAM,CAAC,AAAC;YAEjD,OAAOG,MAAM,CAAC;QAChB,EAAE,OAAOE,CAAC,EAAE;YACV,MAAMA,CAAC,CAAC;QACV,CAAC,QAAS;YACRJ,IAAI,CAACK,OAAO,EAAE,CAAC;QACjB,CAAC;IACH;UAEMJ,OAAO,GAAwB;QACnC,MAAMD,IAAI,GAAG,MAAM,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE,AAAC;QACvC,OAAOD,IAAI,CAAC;IACd;IAhCAM,aAAc;QACZ,IAAI,CAACN,IAAI,GAAG,IAAIO,GAAI,KAAA,CAAC;YACnBC,IAAI,EAAEC,OAAY,aAAA,IAAI,UAAU;YAChCC,IAAI,EAAEC,OAAY,aAAA,IAAI,WAAW;YACjCC,QAAQ,EAAEC,OAAW,YAAA,IAAI,EAAE;YAC3BC,IAAI,EAAEC,QAAQ,CAACC,OAAO,QAAA,CAAC,IAAI,KAAK;YAChCC,QAAQ,EAAEC,OAAW,YAAA,IAAI,UAAU;YACnCC,GAAG,EAAE;gBACHC,kBAAkB,EAAE,KAAK;gBACzBC,EAAE,EAAEC,OAAmB,oBAAA,IAAI,EAAE;aAC9B;SACF,CAAC,CAAC;IACL;CAqBD"}